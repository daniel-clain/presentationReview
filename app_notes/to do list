* button that allows users to 'login as already registered user' - this is a hard one. this is required because if someone tries to use their account on someones comp who hasnt registered yet, then if the new user uses the 'register email' feature -> then all reviews done by the old user will be now allocated to the new user that just 'registered'. problem with this is that its important but very unlikely.


* check through the app to find example of data manipulation that can be done in a more process conservative way


* when user enters their email, create a data record for them with the email as the id, the users userName and profile pic also get stored in this obj. This way you dont have to rely on local storage to retain profile pic and name, instead enter email and retrieve name and pic from data.

* setup cucumber, sonarqube, app dynamics
* manage user - if user has already set name and username, show there instead with a change button

* Idea: user profile pic and name. The app was designed to be super simple and minimal - and therefore adding things like pic and name seemed like unnecessary overhead. However, i see there being a lot of ux value to having pic and name added. Imagine if anyone added in a presenters name, and it prompts the user a match on registered user names, once selecting one of the prompts, the persons registered name is shown with their profile pic instead of generic speaker icon

* find out how bad it is to store data in json files rather than DB or other

* analyze how the data is managed and try to ensure there is no risk of data loss or data corruption

* maybe modify review form so that it presents 1 review item at a time to the reviewer, reviewer has no need to scroll and focus on 1 at a time.
* fix tooltips so they point at the icon and so that they appropriatley sized and positioned

* each review item should have an id, review items cant be edited. If a new review item is created then it gets a new id, if a review item is delete, if the item already has reviews submitted against it, it wont be deleted, just archived. Review items need to be managed in an admin section under a 'manage review items' option. Here items can be added and deleted.


* create presentation topic submit and upvote feature:
  - if you think of a presentation topic that you would like to see covered you can enter a brief topic/category and submit it to a larger list
  - you can look through a list of proposed presentation topics, each will have a checkbox next to each item, if you would like to see the item covered, check it
  - this section will also show the top 3 topics that everyone has voted up, it will be obvious to everyone what topics should be presented next, someone could take the initiative to plan a presentation based on this
  - (topics that have existed for over a month with only 1 vote will be removed from the list. any one can propose an item be removed from the list because it is completed, it will be removed from theirs but not others, if 3 people mark a presentation as completed then it will be removed from everyones list

* presentation and speaker - merge the same, delete and edit.

* right now data related server calls are sending and receiving entire data objects, eventually this should be changed so that only the minimal amount of data is transferred in the transactions.
